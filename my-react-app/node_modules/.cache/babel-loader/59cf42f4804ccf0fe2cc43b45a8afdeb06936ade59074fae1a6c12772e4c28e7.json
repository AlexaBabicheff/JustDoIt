{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // initialState: initialState\n  reducers: {\n    increase: state => {\n      state.counter += 1;\n    },\n    decrease: state => {\n      state.counter -= 1;\n    },\n    reset: state => {\n      state.counter = 0;\n    }\n  }\n});\n\n// increase = {type: 'counter/increase}\nexport const {\n  increase,\n  decrease,\n  reset\n} = counterSlice.actions;\nexport default counterSlice.reducer;\n\n// раньше вручную создавал экшены \n// за меня это делает rtk\n// counter/increase","map":{"version":3,"names":["createSlice","initialState","counter","counterSlice","name","reducers","increase","state","decrease","reset","actions","reducer"],"sources":["/Users/tedwilliams/Desktop/Folder/Main FE_Pro/REACT_FOLDER/22.02.24/src/store/counterSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = { counter: 0 }\n\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState, // initialState: initialState\n  reducers: {\n    increase: (state) => {\n      state.counter += 1\n    },\n    decrease: (state) => {\n      state.counter -= 1\n    },\n    reset: (state) => {\n      state.counter = 0\n    },\n  },\n})\n\n// increase = {type: 'counter/increase}\nexport const { increase, decrease, reset } = counterSlice.actions\nexport default counterSlice.reducer\n\n// раньше вручную создавал экшены \n// за меня это делает rtk\n// counter/increase "],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE;AAAE,CAAC;AAEnC,MAAMC,YAAY,GAAGH,WAAW,CAAC;EAC/BI,IAAI,EAAE,SAAS;EACfH,YAAY;EAAE;EACdI,QAAQ,EAAE;IACRC,QAAQ,EAAGC,KAAK,IAAK;MACnBA,KAAK,CAACL,OAAO,IAAI,CAAC;IACpB,CAAC;IACDM,QAAQ,EAAGD,KAAK,IAAK;MACnBA,KAAK,CAACL,OAAO,IAAI,CAAC;IACpB,CAAC;IACDO,KAAK,EAAGF,KAAK,IAAK;MAChBA,KAAK,CAACL,OAAO,GAAG,CAAC;IACnB;EACF;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM;EAAEI,QAAQ;EAAEE,QAAQ;EAAEC;AAAM,CAAC,GAAGN,YAAY,CAACO,OAAO;AACjE,eAAeP,YAAY,CAACQ,OAAO;;AAEnC;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}