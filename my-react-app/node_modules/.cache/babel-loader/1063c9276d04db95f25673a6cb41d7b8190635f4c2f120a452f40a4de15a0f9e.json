{"ast":null,"code":"var _jsxFileName = \"/Users/tedwilliams/Desktop/Folder/Main FE_Pro/REACT_FOLDER/18.01.24/src/components/Post/Post.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Post = ({\n  title,\n  description,\n  image,\n  marked\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: marked ? 'rgb(238, 209, 209)' : ''\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      alt: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 5\n  }, this);\n};\n_c = Post;\nexport default Post;\n\n// const { title, description, image } = props сразу в параметрах функции\n\n// Примеры того как работают пропс\nexport const sum = props => {\n  return props.a + props.b;\n};\nsum({\n  a: 4,\n  b: 5\n});\n\n// export class PostComponent {\n//   constructor(props) {\n//     this.title = props.title\n//   }\n// }\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["Post","title","description","image","marked","_jsxDEV","style","background","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","sum","props","a","b","$RefreshReg$"],"sources":["/Users/tedwilliams/Desktop/Folder/Main FE_Pro/REACT_FOLDER/18.01.24/src/components/Post/Post.jsx"],"sourcesContent":["const Post = ({ title, description, image, marked }) => {\n  return (\n    <div style={{ background: marked ? 'rgb(238, 209, 209)' : '' }}>\n      <h1>{title}</h1>\n      <p>{description}</p>\n      <img src={image} alt={title} />\n    </div>\n  )\n}\nexport default Post\n\n// const { title, description, image } = props сразу в параметрах функции\n\n// Примеры того как работают пропс\nexport const sum = (props) => {\n  return props.a + props.b\n}\n\nsum({ a: 4, b: 5 })\n\n// export class PostComponent {\n//   constructor(props) {\n//     this.title = props.title\n//   }\n// }\n"],"mappings":";;AAAA,MAAMA,IAAI,GAAGA,CAAC;EAAEC,KAAK;EAAEC,WAAW;EAAEC,KAAK;EAAEC;AAAO,CAAC,KAAK;EACtD,oBACEC,OAAA;IAAKC,KAAK,EAAE;MAAEC,UAAU,EAAEH,MAAM,GAAG,oBAAoB,GAAG;IAAG,CAAE;IAAAI,QAAA,gBAC7DH,OAAA;MAAAG,QAAA,EAAKP;IAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChBP,OAAA;MAAAG,QAAA,EAAIN;IAAW;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBP,OAAA;MAAKQ,GAAG,EAAEV,KAAM;MAACW,GAAG,EAAEb;IAAM;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5B,CAAC;AAEV,CAAC;AAAAG,EAAA,GARKf,IAAI;AASV,eAAeA,IAAI;;AAEnB;;AAEA;AACA,OAAO,MAAMgB,GAAG,GAAIC,KAAK,IAAK;EAC5B,OAAOA,KAAK,CAACC,CAAC,GAAGD,KAAK,CAACE,CAAC;AAC1B,CAAC;AAEDH,GAAG,CAAC;EAAEE,CAAC,EAAE,CAAC;EAAEC,CAAC,EAAE;AAAE,CAAC,CAAC;;AAEnB;AACA;AACA;AACA;AACA;AAAA,IAAAJ,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}