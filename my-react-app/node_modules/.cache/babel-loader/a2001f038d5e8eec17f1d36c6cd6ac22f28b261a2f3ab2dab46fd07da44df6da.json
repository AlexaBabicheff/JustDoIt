{"ast":null,"code":"// импорт createSlice\nimport { createSlice } from '@reduxjs/toolkit';\n// создать initialState с массивом\nconst initialState = {\n  todos: [{\n    id: '1',\n    taskTitle: 'Task 1',\n    taskDescription: 'Complete project presentation',\n    doneFlag: false\n  }, {\n    id: '2',\n    taskTitle: 'Task 2',\n    taskDescription: 'Buy groceries',\n    doneFlag: true\n  }]\n};\n// создать todoSlice с и енем todo, IS, reducers пустой\nconst todoSlice = createSlice({\n  name: 'todo',\n  initialState,\n  reducers: {\n    addTodo: (state, action) => {\n      // return [...state, action.payload]\n      state.todos = [...state.todos, action.payload];\n    },\n    deleteTodo: (state, action) => {\n      return state.todos.filter(todo => todo.id !== action.payload);\n    },\n    toggleTodo: (state, action) => {\n      return state.todos.map(todo => todo.id === action.payload ? {\n        ...todo,\n        doneFlag: !todo.doneFlag\n      } : todo);\n    }\n  }\n});\nexport const {\n  addTodo,\n  deleteTodo,\n  toggleTodo\n} = todoSlice.actions;\nexport default todoSlice.reducer;\n\n// импортировать нужные экшены в компоненты","map":{"version":3,"names":["createSlice","initialState","todos","id","taskTitle","taskDescription","doneFlag","todoSlice","name","reducers","addTodo","state","action","payload","deleteTodo","filter","todo","toggleTodo","map","actions","reducer"],"sources":["/Users/tedwilliams/Desktop/Folder/Main FE_Pro/REACT_FOLDER/22.02.24/src/store/todoSlice.js"],"sourcesContent":["// импорт createSlice\nimport { createSlice } from '@reduxjs/toolkit'\n// создать initialState с массивом\nconst initialState = {\n  todos: [\n    {\n      id: '1',\n      taskTitle: 'Task 1',\n      taskDescription: 'Complete project presentation',\n      doneFlag: false,\n    },\n    {\n      id: '2',\n      taskTitle: 'Task 2',\n      taskDescription: 'Buy groceries',\n      doneFlag: true,\n    },\n  ],\n}\n// создать todoSlice с и енем todo, IS, reducers пустой\nconst todoSlice = createSlice({\n  name: 'todo',\n  initialState,\n  reducers: {\n    addTodo: (state, action) => {\n      // return [...state, action.payload]\n      state.todos = [...state.todos, action.payload]\n    },\n    deleteTodo: (state, action) => {\n      return state.todos.filter((todo) => todo.id !== action.payload)\n    },\n    toggleTodo: (state, action) => {\n      return state.todos.map((todo) =>\n        todo.id === action.payload ? { ...todo, doneFlag: !todo.doneFlag } : todo\n      )\n    },\n  },\n})\n\nexport const { addTodo, deleteTodo, toggleTodo } = todoSlice.actions\nexport default todoSlice.reducer\n\n// импортировать нужные экшены в компоненты\n"],"mappings":"AAAA;AACA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C;AACA,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,CACL;IACEC,EAAE,EAAE,GAAG;IACPC,SAAS,EAAE,QAAQ;IACnBC,eAAe,EAAE,+BAA+B;IAChDC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEH,EAAE,EAAE,GAAG;IACPC,SAAS,EAAE,QAAQ;IACnBC,eAAe,EAAE,eAAe;IAChCC,QAAQ,EAAE;EACZ,CAAC;AAEL,CAAC;AACD;AACA,MAAMC,SAAS,GAAGP,WAAW,CAAC;EAC5BQ,IAAI,EAAE,MAAM;EACZP,YAAY;EACZQ,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1B;MACAD,KAAK,CAACT,KAAK,GAAG,CAAC,GAAGS,KAAK,CAACT,KAAK,EAAEU,MAAM,CAACC,OAAO,CAAC;IAChD,CAAC;IACDC,UAAU,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MAC7B,OAAOD,KAAK,CAACT,KAAK,CAACa,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACb,EAAE,KAAKS,MAAM,CAACC,OAAO,CAAC;IACjE,CAAC;IACDI,UAAU,EAAEA,CAACN,KAAK,EAAEC,MAAM,KAAK;MAC7B,OAAOD,KAAK,CAACT,KAAK,CAACgB,GAAG,CAAEF,IAAI,IAC1BA,IAAI,CAACb,EAAE,KAAKS,MAAM,CAACC,OAAO,GAAG;QAAE,GAAGG,IAAI;QAAEV,QAAQ,EAAE,CAACU,IAAI,CAACV;MAAS,CAAC,GAAGU,IACvE,CAAC;IACH;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEN,OAAO;EAAEI,UAAU;EAAEG;AAAW,CAAC,GAAGV,SAAS,CAACY,OAAO;AACpE,eAAeZ,SAAS,CAACa,OAAO;;AAEhC"},"metadata":{},"sourceType":"module","externalDependencies":[]}